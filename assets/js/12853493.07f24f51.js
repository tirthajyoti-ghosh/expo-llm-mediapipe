"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[198],{8269:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>t});const l=JSON.parse('{"id":"hookless-apis","title":"Hookless APIs","description":"The hookless APIs provide more granular control over the model lifecycle and inference process. These APIs are ideal for developers who need to manage models manually or integrate them into non-React workflows.","source":"@site/docs/hookless-apis.md","sourceDirName":".","slug":"/hookless-apis","permalink":"/expo-llm-mediapipe/docs/hookless-apis","draft":false,"unlisted":false,"editUrl":"https://github.com/tirthajyoti-ghosh/expo-llm-mediapipe/edit/main/docs/docs/hookless-apis.md","tags":[],"version":"current","frontMatter":{"id":"hookless-apis","title":"Hookless APIs"},"sidebar":"docs","previous":{"title":"React Hooks","permalink":"/expo-llm-mediapipe/docs/react-hooks"},"next":{"title":"Contributing","permalink":"/expo-llm-mediapipe/docs/contributing"}}');var o=s(4848),r=s(8453);const d={id:"hookless-apis",title:"Hookless APIs"},i=void 0,a={},t=[{value:"Model Creation and Management",id:"model-creation-and-management",level:2},{value:"<strong><code>createModel</code></strong>",id:"createmodel",level:3},{value:"<strong>Parameters</strong>",id:"parameters",level:5},{value:"<strong>Example</strong>",id:"example",level:5},{value:"<strong><code>createModelFromAsset</code></strong>",id:"createmodelfromasset",level:3},{value:"<strong>Parameters</strong>",id:"parameters-1",level:5},{value:"<strong>Example</strong>",id:"example-1",level:5},{value:"<strong><code>createModelFromDownloaded</code></strong>",id:"createmodelfromdownloaded",level:3},{value:"<strong>Parameters</strong>",id:"parameters-2",level:5},{value:"<strong>Example</strong>",id:"example-2",level:5},{value:"<strong><code>releaseModel</code></strong>",id:"releasemodel",level:3},{value:"<strong>Parameters</strong>",id:"parameters-3",level:5},{value:"<strong>Example</strong>",id:"example-3",level:5},{value:"Inference",id:"inference",level:2},{value:"<strong><code>generateResponse</code></strong>",id:"generateresponse",level:3},{value:"<strong>Parameters</strong>",id:"parameters-4",level:5},{value:"<strong>Example</strong>",id:"example-4",level:5},{value:"<strong><code>generateResponseAsync</code></strong>",id:"generateresponseasync",level:3},{value:"<strong>Parameters</strong>",id:"parameters-5",level:5},{value:"<strong>Example</strong>",id:"example-5",level:5},{value:"Model Download Management",id:"model-download-management",level:2},{value:"<strong><code>downloadModel</code></strong>",id:"downloadmodel",level:3},{value:"<strong>Parameters</strong>",id:"parameters-6",level:5},{value:"<strong>Example</strong>",id:"example-6",level:5},{value:"<strong><code>cancelDownload</code></strong>",id:"canceldownload",level:3},{value:"<strong>Parameters</strong>",id:"parameters-7",level:5},{value:"<strong>Example</strong>",id:"example-7",level:5},{value:"<strong><code>isModelDownloaded</code></strong>",id:"ismodeldownloaded",level:3},{value:"<strong>Parameters</strong>",id:"parameters-8",level:5},{value:"<strong>Example</strong>",id:"example-8",level:5},{value:"<strong><code>getDownloadedModels</code></strong>",id:"getdownloadedmodels",level:3},{value:"<strong>Example</strong>",id:"example-9",level:5},{value:"<strong><code>deleteDownloadedModel</code></strong>",id:"deletedownloadedmodel",level:3},{value:"<strong>Parameters</strong>",id:"parameters-9",level:5},{value:"<strong>Example</strong>",id:"example-10",level:5},{value:"Event Listeners",id:"event-listeners",level:2},{value:"<strong><code>addListener</code></strong>",id:"addlistener",level:3},{value:"<strong>Parameters</strong>",id:"parameters-10",level:5},{value:"<strong>Returns</strong>",id:"returns",level:5},{value:"<strong>Available Events</strong>",id:"available-events",level:5},{value:"<strong>Example</strong>",id:"example-11",level:5},{value:"<strong><code>removeAllListeners</code></strong>",id:"removealllisteners",level:3},{value:"<strong>Parameters</strong>",id:"parameters-11",level:5},{value:"<strong>Example</strong>",id:"example-12",level:5},{value:"Complete Examples",id:"complete-examples",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h5:"h5",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"The hookless APIs provide more granular control over the model lifecycle and inference process. These APIs are ideal for developers who need to manage models manually or integrate them into non-React workflows."}),"\n",(0,o.jsx)(n.h2,{id:"model-creation-and-management",children:"Model Creation and Management"}),"\n",(0,o.jsx)(n.h3,{id:"createmodel",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"createModel"})})}),"\n",(0,o.jsx)(n.p,{children:"Creates a model from a file path."}),"\n",(0,o.jsx)(n.h5,{id:"parameters",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modelPath"}),": Path to the model file."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"maxTokens"}),": Maximum tokens in the response."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"topK"}),": Limits diversity in responses."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"temperature"}),": Controls randomness in responses."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"randomSeed"}),": For reproducible outputs."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const modelHandle = await ExpoLlmMediapipe.createModel(\n  '/path/to/model',\n  1024,  // maxTokens\n  40,    // topK\n  0.7,   // temperature\n  42     // randomSeed\n);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"createmodelfromasset",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"createModelFromAsset"})})}),"\n",(0,o.jsx)(n.p,{children:"Creates a model from an asset bundled with the application."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-1",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modelName"}),": Name of the model asset."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"maxTokens"}),": Maximum tokens in the response."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"topK"}),": Limits diversity in responses."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"temperature"}),": Controls randomness in responses."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"randomSeed"}),": For reproducible outputs."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-1",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const modelHandle = await ExpoLlmMediapipe.createModelFromAsset(\n  'gemma-1.1-2b-it-cpu-int4.bin',  // modelName\n  1024,  // maxTokens\n  40,    // topK\n  0.7,   // temperature\n  42     // randomSeed\n);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"createmodelfromdownloaded",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"createModelFromDownloaded"})})}),"\n",(0,o.jsx)(n.p,{children:"Creates a model from a previously downloaded file."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-2",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modelName"}),": Name of the downloaded model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"maxTokens"}),": Maximum tokens in the response (optional)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"topK"}),": Limits diversity in responses (optional)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"temperature"}),": Controls randomness in responses (optional)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"randomSeed"}),": For reproducible outputs (optional)."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-2",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const modelHandle = await ExpoLlmMediapipe.createModelFromDownloaded(\n  'gemma-1.1-2b-it-cpu-int4.bin',  // modelName\n  1024,  // maxTokens\n  40,    // topK\n  0.7,   // temperature\n  42     // randomSeed\n);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"releasemodel",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"releaseModel"})})}),"\n",(0,o.jsx)(n.p,{children:"Releases a model to free resources."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-3",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"handle"}),": Handle to the model."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-3",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"await ExpoLlmMediapipe.releaseModel(modelHandle);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"inference",children:"Inference"}),"\n",(0,o.jsx)(n.h3,{id:"generateresponse",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"generateResponse"})})}),"\n",(0,o.jsx)(n.p,{children:"Generates a complete response for a given prompt."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-4",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"handle"}),": Handle to the model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"requestId"}),": Unique identifier for the request."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"prompt"}),": The input prompt for the model."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-4",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const response = await ExpoLlmMediapipe.generateResponse(\n  modelHandle, \n  1,  // requestId\n  'What is AI?'\n);\nconsole.log(response);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"generateresponseasync",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"generateResponseAsync"})})}),"\n",(0,o.jsx)(n.p,{children:"Generates a streaming response for a given prompt. Results are delivered through event listeners."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-5",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"handle"}),": Handle to the model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"requestId"}),": Unique identifier for the request."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"prompt"}),": The input prompt for the model."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-5",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Set up listener for partial responses first (see Event Listeners section)\nconst subscription = ExpoLlmMediapipe.addListener('onPartialResponse', (event) => {\n  console.log(`Partial response: ${event.response}`);\n});\n\n// Then generate response asynchronously\nawait ExpoLlmMediapipe.generateResponseAsync(\n  modelHandle,\n  1,  // requestId\n  'Explain machine learning.'\n);\n\n// Don't forget to remove the listener when done\nsubscription.remove();\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"model-download-management",children:"Model Download Management"}),"\n",(0,o.jsx)(n.h3,{id:"downloadmodel",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"downloadModel"})})}),"\n",(0,o.jsx)(n.p,{children:"Downloads a model from a given URL."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-6",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"url"}),": URL of the model file."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modelName"}),": Name of the model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"options"}),": Additional options (optional):","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"overwrite"}),": Whether to overwrite existing model (boolean)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"timeout"}),": Download timeout in milliseconds (number)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"headers"}),": HTTP headers for the request (",(0,o.jsx)(n.code,{children:"Record<string, string>"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-6",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"await ExpoLlmMediapipe.downloadModel(\n  'https://huggingface.co/t-ghosh/gemma-tflite/resolve/main/gemma-1.1-2b-it-int4.bin',\n  'gemma-1.1-2b-it-int4.bin',\n  { \n    overwrite: true,\n    timeout: 60000,\n    headers: { 'Authorization': 'Bearer token' }\n  }\n);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"canceldownload",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"cancelDownload"})})}),"\n",(0,o.jsx)(n.p,{children:"Cancels an ongoing model download."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-7",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modelName"}),": Name of the model."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-7",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"await ExpoLlmMediapipe.cancelDownload('gemma-1.1-2b-it-int4.bin');\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"ismodeldownloaded",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"isModelDownloaded"})})}),"\n",(0,o.jsx)(n.p,{children:"Checks if a model is already downloaded."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-8",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modelName"}),": Name of the model."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-8",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const isDownloaded = await ExpoLlmMediapipe.isModelDownloaded('gemma-1.1-2b-it-int4.bin');\nconsole.log(isDownloaded ? 'Model is downloaded' : 'Model is not downloaded');\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"getdownloadedmodels",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"getDownloadedModels"})})}),"\n",(0,o.jsx)(n.p,{children:"Retrieves a list of all downloaded models."}),"\n",(0,o.jsx)(n.h5,{id:"example-9",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const models = await ExpoLlmMediapipe.getDownloadedModels();\nconsole.log('Downloaded models:', models);\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"deletedownloadedmodel",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"deleteDownloadedModel"})})}),"\n",(0,o.jsx)(n.p,{children:"Deletes a downloaded model."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-9",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modelName"}),": Name of the model."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-10",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"await ExpoLlmMediapipe.deleteDownloadedModel('gemma-1.1-2b-it-int4.bin');\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"event-listeners",children:"Event Listeners"}),"\n",(0,o.jsx)(n.h3,{id:"addlistener",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"addListener"})})}),"\n",(0,o.jsx)(n.p,{children:"Adds a listener for a specific event."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-10",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"eventName"}),": Name of the event to listen for."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"listener"}),": Callback function to execute when the event occurs."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"returns",children:(0,o.jsx)(n.strong,{children:"Returns"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"NativeModuleSubscription"}),": Subscription object with a ",(0,o.jsx)(n.code,{children:"remove()"})," method."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"available-events",children:(0,o.jsx)(n.strong,{children:"Available Events"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"onPartialResponse"})}),": Fired when a partial response is generated."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"handle"}),": Model handle."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"requestId"}),": Request identifier."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"response"}),": Partial text response."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"onErrorResponse"})}),": Fired when an error occurs during response generation."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"handle"}),": Model handle."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"requestId"}),": Request identifier."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"error"}),": Error message."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"downloadProgress"})}),": Fired during model download."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modelName"}),": Name of the model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"url"}),": Download URL (optional)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"bytesDownloaded"}),": Amount downloaded in bytes (optional)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"totalBytes"}),": Total size in bytes (optional)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"progress"}),": Download progress from 0 to 1 (optional)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"status"}),": Status of download ('downloading', 'completed', 'error', 'cancelled')."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"error"}),": Error message if status is 'error' (optional)."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"logging"})}),": Fired when the native module logs a message."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"handle"}),": Model handle."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"message"}),": Log message."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"onChange"})}),": Fired when a value changes."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"value"}),": The new value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-11",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Listen for partial responses\nconst partialResponseSubscription = ExpoLlmMediapipe.addListener(\n  'onPartialResponse', \n  (event) => {\n    console.log(`Model ${event.handle}, Request ${event.requestId}: ${event.response}`);\n  }\n);\n\n// Listen for error responses\nconst errorResponseSubscription = ExpoLlmMediapipe.addListener(\n  'onErrorResponse', \n  (event) => {\n    console.error(`Error from model ${event.handle}, Request ${event.requestId}: ${event.error}`);\n  }\n);\n\n// Listen for download progress\nconst downloadProgressSubscription = ExpoLlmMediapipe.addListener(\n  'downloadProgress', \n  (event) => {\n    if (event.status === 'downloading' && event.progress !== undefined) {\n      console.log(`Downloading ${event.modelName}: ${Math.round(event.progress * 100)}%`);\n      console.log(`Downloaded ${event.bytesDownloaded} of ${event.totalBytes} bytes`);\n    } else if (event.status === 'completed') {\n      console.log(`Download of ${event.modelName} completed`);\n    } else if (event.status === 'error') {\n      console.error(`Download error: ${event.error}`);\n    } else if (event.status === 'cancelled') {\n      console.log(`Download of ${event.modelName} was cancelled`);\n    }\n  }\n);\n\n// Listen for logging messages\nconst loggingSubscription = ExpoLlmMediapipe.addListener(\n  'logging', \n  (event) => {\n    console.log(`Log from model ${event.handle}: ${event.message}`);\n  }\n);\n\n// Listen for value changes\nconst onChangeSubscription = ExpoLlmMediapipe.addListener(\n  'onChange', \n  (event) => {\n    console.log(`Value changed: ${event.value}`);\n  }\n);\n\n// Clean up listeners when they're no longer needed\npartialResponseSubscription.remove();\nerrorResponseSubscription.remove();\ndownloadProgressSubscription.remove();\nloggingSubscription.remove();\nonChangeSubscription.remove();\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"removealllisteners",children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"removeAllListeners"})})}),"\n",(0,o.jsx)(n.p,{children:"Removes all listeners for a specific event."}),"\n",(0,o.jsx)(n.h5,{id:"parameters-11",children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"event"}),": Name of the event to remove listeners for."]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"example-12",children:(0,o.jsx)(n.strong,{children:"Example"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"ExpoLlmMediapipe.removeAllListeners('downloadProgress');\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"complete-examples",children:"Complete Examples"}),"\n",(0,o.jsx)(n.p,{children:"Refer to these example implementations for practical usage:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/tirthajyoti-ghosh/expo-llm-mediapipe/blob/main/example/src/screens/HooklessAssetDemoScreen.tsx",children:"Model loading from assets"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/tirthajyoti-ghosh/expo-llm-mediapipe/blob/main/example/src/screens/HooklessDownloadableDemoScreen.tsx",children:"Model download and inference"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/tirthajyoti-ghosh/expo-llm-mediapipe/blob/main/example/src/screens/HooklessUtilityDemoScreen.tsx",children:"Model utility functions"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>i});var l=s(6540);const o={},r=l.createContext(o);function d(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);